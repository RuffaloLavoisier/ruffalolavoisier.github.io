<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ruffalolavoisier.github.io/</id><title>Unforgettable</title><subtitle>"우공이라는 노인이 산을 옮겼으니"</subtitle> <updated>2025-05-09T09:03:37+09:00</updated> <author> <name>Ruffalo</name> <uri>https://ruffalolavoisier.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://ruffalolavoisier.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://ruffalolavoisier.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 Ruffalo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>악성코드 안에 패킹된 실행파일 뜯어내기</title><link href="https://ruffalolavoisier.github.io/posts/unpacking_malware_core_3/" rel="alternate" type="text/html" title="악성코드 안에 패킹된 실행파일 뜯어내기" /><published>2025-05-05T13:45:22+09:00</published> <updated>2025-05-05T13:45:22+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/unpacking_malware_core_3/</id> <content type="text/html" src="https://ruffalolavoisier.github.io/posts/unpacking_malware_core_3/" /> <author> <name>Ruffalo</name> </author> <category term="android" /> <category term="reverse" /> <category term="research" /> <summary>Reverse Engineering Packed Binaries to Discover Hidden Logic</summary> </entry> <entry><title>악성코드 안에 암호화된 문자열 해제하기</title><link href="https://ruffalolavoisier.github.io/posts/researched_encrypt_string_malware_2/" rel="alternate" type="text/html" title="악성코드 안에 암호화된 문자열 해제하기" /><published>2025-05-04T00:27:24+09:00</published> <updated>2025-05-07T08:09:00+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/researched_encrypt_string_malware_2/</id> <content type="text/html" src="https://ruffalolavoisier.github.io/posts/researched_encrypt_string_malware_2/" /> <author> <name>Ruffalo</name> </author> <category term="android" /> <category term="research" /> <category term="reverse" /> <summary>Examine the encrypted strings within the malware and decrypt them to identify which API are being used.</summary> </entry> <entry><title>ELF format templates 수정하기</title><link href="https://ruffalolavoisier.github.io/posts/hexeditor_templates_for_elf/" rel="alternate" type="text/html" title="ELF format templates 수정하기" /><published>2025-05-01T09:02:23+09:00</published> <updated>2025-05-01T09:02:23+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/hexeditor_templates_for_elf/</id> <content type="text/html" src="https://ruffalolavoisier.github.io/posts/hexeditor_templates_for_elf/" /> <author> <name>Ruffalo</name> </author> <category term="binary" /> <category term="research" /> <summary>PT_DYNAMIC 일 때 offset data 를 각 구조체로 파싱하기</summary> </entry> <entry><title>RASP 에 대한 고찰</title><link href="https://ruffalolavoisier.github.io/posts/bypass_rasp/" rel="alternate" type="text/html" title="RASP 에 대한 고찰" /><published>2025-04-28T02:39:42+09:00</published> <updated>2025-04-30T12:48:42+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/bypass_rasp/</id> <content type="text/html" src="https://ruffalolavoisier.github.io/posts/bypass_rasp/" /> <author> <name>Ruffalo</name> </author> <category term="research" /> <category term="android" /> <summary>Runtime Application Self-Protection (RASP)</summary> </entry> <entry><title>ELF header 에 대한 고찰</title><link href="https://ruffalolavoisier.github.io/posts/elf_header_analysis/" rel="alternate" type="text/html" title="ELF header 에 대한 고찰" /><published>2025-04-24T17:08:04+09:00</published> <updated>2025-04-24T23:42:38+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/elf_header_analysis/</id> <content type="text/html" src="https://ruffalolavoisier.github.io/posts/elf_header_analysis/" /> <author> <name>Ruffalo</name> </author> <category term="research" /> <category term="malware" /> <summary>ELF header 살펴보기</summary> </entry> </feed>
